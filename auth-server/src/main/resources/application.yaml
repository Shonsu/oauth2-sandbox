spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/microservices
    password: microservices
    username: microservices
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
#    defer-datasource-initialization: true
  sql:
    init:
      mode: always
      schema-locations:
        - classpath:oauth2-registered-client-schema.sql
        - classpath:oauth2-authorization-consent-schema.sql
        - classpath:oauth2_authorization-schema.sql
        - classpath:user-and-authorities.sql
#  security:
#    oauth2:
#      authorizationserver:
#        client:
#          client-1:
#            registration:
#              client-id: client
#              # the client secret is "secret" (without quotes)
#              client-secret: "{bcrypt}$2a$10$jdJGhzsiIqYFpjJiYWMl/eKDOd8vdyQis2aynmFN0dgJ53XvpzzwC"
#              client-authentication-methods: client_secret_basic
#              authorization-grant-types: client_credentials,authorization_code,refresh_token
#              scopes: user.read,user.write,openid
#              redirect-uris: http://127.0.0.1:8082/login/oauth2/code/spring
#            require-authorization-consent: true
#            token:
#              access-token-time-to-live: 30s
logging:
  level:
    org:
      springframework:
        security: TRACE

